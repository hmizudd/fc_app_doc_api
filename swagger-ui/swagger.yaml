openapi: 3.0.0

info:
  title: FCアプリ API仕様
  version: '1.0'
  description: FCアプリ API仕様
  contact:
    name: FCApp

servers:
  - url: 'http://localhost:3000/api'
    description: Test Server

paths:
  /login:
    post:
      summary: ログイン
      tags:
        - Authenticate
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: APIアクセストークン
                  client:
                    $ref: '#/components/schemas/Client-loggedin'
                  status:
                    type: string
                  first_survey_url:
                    type: string
                    description: 初回アンケートURL
                required:
                  - access_token
                  - client
                  - status
              examples:
                example:
                  value:
                    access_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9hc29iaS50ZXN0XC9hcGlcL2FkbWluXC9sb2dpbiIsImlhdCI6MTU3MjMzMDUwNSwiZXhwIjoxNTcyMzM0MTA1LCJuYmYiOjE1NzIzMzA1MDUsImp0aSI6IlBzYmxkTWtPVWduVTdrSGYiLCJzdWIiOjIsInBydiI6ImNlNjM2MDFjMDc0Yzc5ZWIzM2Y1YjI5YWU2NGRmOTUxYzJjYTRhZjEifQ.wpEmWqF_BasbY0
                    client:
                      id: 1
                      login_id: User
                      password: $2y$10$DHcchiEiAOvIbwmFunVH2.aYB4IxXbZzFeNcl0f267VuOhfxUI.ju
                      email: tyamada@example.com
                      full_name: 山田 太郎
                    status: success
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  error:
                    type: string
                required:
                  - status
                  - error
              examples:
                example:
                  value:
                    error: Unauthorized
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login_id:
                  type: string
                  description: ログインID
                  maxLength: 20
                password:
                  type: string
                  description: パスワード
                  format: password
                  maxLength: 20
                device_type:
                  type: string
                  description: デバイス種別(iOS/Android)
                device_token:
                  type: string
                  description: デバイストークン
              required:
                - login_id
                - password
            examples:
              example:
                value:
                  login_id: User
                  password: Passw0rd
                  device_type: iOS
                  device_token: token
        description: ''
      description: ログイン

  /register:
    post:
      summary: メールアドレス登録
      tags:
        - Authenticate
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                required:
                  - status
              examples:
                example:
                  value:
                    status: success
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  messages:
                    type: object
                required:
                  - status
                  - messages
      description: メールアドレス登録
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client-register'
            examples:
              example:
                value:
                  login_id: User
                  password: Passw0rd
                  last_name: 山田
                  first_name: 太郎
                  last_name_kana: やまだ
                  first_name_kana: たろう
                  email: tyamada@example.com
                  birth_date: '1980-01-20'
                  gender: 0
                  learned_seminar_type: 0
                  office_code: tokyo
      operationId: register

  /news:
    get:
      summary: お知らせ一覧
      tags:
        - News
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  client_news_list:
                    type: array
                    items:
                      $ref: '#/components/schemas/client_news'
                  staff_news_list:
                    type: array
                    items:
                      $ref: '#/components/schemas/staff_news'
                  status:
                    type: string
                required:
                  - client_news_list
                  - status
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  error:
                    type: string
                required:
                  - status
                  - error
      description: |-
        お知らせ一覧取得
        2ヶ月前の月初〜現在までの一覧を取得する。
      parameters:
        - schema: {}
          in: header
          name: Authorization
          description: 'Bearer {$token}'
          required: true
      operationId: getNewsList
    parameters: []

  /faq:
    get:
      summary: よくある質問一覧
      tags:
        - FAQ
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  client_faq_list:
                    type: array
                    items:
                      $ref: '#/components/schemas/client_faq'
                  status:
                    type: string
                required:
                  - client_faq_list
                  - status
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  error:
                    type: string
                required:
                  - status
                  - error
      description: よくある質問一覧取得
      parameters:
        - schema: {}
          in: header
          name: Authorization
          description: 'Bearer {$token}'
          required: true
      operationId: getFaqList
    parameters: []
  '/faq/client/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
      summary: よくある質問（顧客）詳細
      tags:
        - FAQ
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  faq:
                    $ref: '#/components/schemas/client_faq'
                  status:
                    type: string
                required:
                  - faq
                  - status
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  error:
                    type: string
                required:
                  - status
                  - error
      description: よくある質問（顧客）詳細取得
      parameters:
        - schema: {}
          in: header
          name: Authorization
          description: 'Bearer {$token}'
          required: true
      operationId: getFaqClient

  /survey:
    get:
      summary: アンケートURLリスト
      tags:
        - Survey
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  client_survey_list:
                    type: array
                    description: 顧客アンケートリスト
                    items:
                      $ref: '#/components/schemas/survey'
                  staff_survey_list:
                    type: array
                    description: スタッフアンケートリスト
                    items:
                      $ref: '#/components/schemas/survey'
                  status:
                    type: string
                required:
                  - status
              examples:
                example-1:
                  value:
                    client_survey_list:
                      - url: 'http://localhost:8080/api/survey/1'
                        name: ファイナンスセミナー
                        event_date: '2019-11-01'
                        start_time: '09:00'
                        end_time: '12:00'
                        category: 午前
                      - url: 'http://localhost:8080/api/survey/20'
                        name: 相談会
                        event_date: '2019-11-01'
                        start_time: '09:00'
                        end_time: '12:00'
                    staff_survey_list:
                      - url: 'http://localhost:8080/api/staff_survey/10'
                    status: success
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  error:
                    type: string
                required:
                  - status
                  - error
      description: アンケートURLリスト取得
      parameters:
        - schema: {}
          in: header
          name: Authorization
          description: 'Bearer {$token}'
          required: true
      operationId: getSurveyList

  /lecture:
    get:
      summary: 講義予約一覧
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  lecture_list:
                    type: array
                    description: 予約受付中の講義一覧
                    items:
                      $ref: '#/components/schemas/seminar'
                  status:
                    type: string
                required:
                  - lecture_list
                  - status
              examples:
                example:
                  value:
                    lecture_list:
                      - id: 1
                        event_date: '2019-11-01'
                        start_time: '09:00'
                        end_time: '12:00'
                        category: 午前
                        name: ファイナンスセミナー
                        amount: 11000
                      - id: 2
                        event_date: '2019-11-05'
                        start_time: '13:00'
                        end_time: '15:00'
                        category: 午後
                        name: ファイナンスセミナー
                        amount: 9800
                    status: success
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  error:
                    type: string
                required:
                  - status
                  - error
      description: 講義一覧取得
      operationId: getLectureList
      parameters:
        - schema: {}
          in: header
          name: Authorization
          description: 'Bearer {$token}'
          required: true
      tags:
        - Seminar
    parameters: []
  /serminar_reserve:
    post:
      summary: 講義・イベント予約
      tags:
        - Seminar
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                required:
                  - status
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  error:
                    type: string
                required:
                  - status
                  - error
      description: 講義・イベント予約
      operationId: postSeminarReserve
      parameters:
        - schema: {}
          in: header
          name: Authorization
          description: 'Bearer {$token}'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: array
                  description: '講義・イベントスケジュールID'
                  items: {}
                type:
                  type: array
                  description: '支払方法(0:無料,1:現金,2:カード)'
                  items: {}
              required:
                - id
                - type
            examples:
              Multiple:
                value:
                  id:
                    - 20
                    - 18
                  type:
                    - 0
                    - 2
              Single:
                value:
                  id:
                    - 4
                  type:
                    - 1
    parameters: []
  /reserved_seminar:
    get:
      summary: 予約済み講義・イベント一覧
      tags:
        - Seminar
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  seminar_list:
                    type: array
                    items:
                      $ref: '#/components/schemas/seminar'
                  status:
                    type: string
                required:
                  - seminar_list
                  - status
              examples:
                example:
                  value:
                    seminar_list:
                      - id: 1
                        event_date: '2019-11-01'
                        start_time: '09:00'
                        end_time: '12:00'
                        category: 午前
                        name: ファイナンスセミナー
                        type: 1
                      - id: 3
                        event_date: '2019-11-10'
                        start_time: '13:00'
                        end_time: '15:00'
                        name: 投資イベント
                        type: 2
                    status: success
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  error:
                    type: string
                required:
                  - status
                  - error
      description: 予約済み講義・イベント一覧取得
      operationId: getReservedSeminarList
      parameters:
        - schema: {}
          in: header
          name: Authorization
          description: 'Bearer {$token}'
          required: true
  /seminar_cancel:
    put:
      summary: 講義・イベントキャンセル
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                required:
                  - status
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  error:
                    type: string
                required:
                  - status
                  - error
      description: 講義・イベントキャンセル
      operationId: putSeminarCancel
      parameters:
        - schema: {}
          in: header
          name: Authorization
          description: 'Bearer {$token}'
          required: true
      tags:
        - Seminar
    parameters: []
  /seminar_history:
    get:
      summary: 履歴
      tags:
        - Seminar
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  seminar_list:
                    type: array
                    items:
                      $ref: '#/components/schemas/seminar'
                  status:
                    type: string
                required:
                  - seminar_list
                  - status
              examples:
                example:
                  value:
                    seminar_list:
                      - id: 1
                        event_date: '2019-11-01'
                        start_time: '09:00'
                        end_time: '12:00'
                        category: 午前
                        name: ファイナンスセミナー
                        type: 1
                      - id: 3
                        event_date: '2019-11-10'
                        start_time: '13:00'
                        end_time: '15:00'
                        name: 投資イベント
                        type: 2
                    status: success
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  error:
                    type: string
                required:
                  - status
                  - error
      description: 講義・イベント参加履歴取得
      operationId: getSeminarHistory
      parameters:
        - schema: {}
          in: header
          name: Authorization
          description: 'Bearer {$token}'
          required: true
  /event:
    get:
      summary: イベント予約一覧
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  event_list:
                    type: array
                    items:
                      $ref: '#/components/schemas/seminar'
                  status:
                    type: string
                required:
                  - event_list
                  - status
              examples:
                example:
                  value:
                    event_list:
                      - id: 3
                        event_date: '2019-11-01'
                        start_time: '09:00'
                        end_time: '12:00'
                        name: 相談会
                        amount: 11000
                      - id: 4
                        event_date: '2019-11-05'
                        start_time: '13:00'
                        end_time: '15:00'
                        name: 相談会
                        amount: 9800
                    status: success
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  error:
                    type: string
                required:
                  - status
                  - error
      description: イベント予約一覧取得
      operationId: getEventList
      parameters:
        - schema: {}
          in: header
          name: Authorization
          description: 'Bearer {$token}'
          required: true
      tags:
        - Seminar
  /result_payment:
    get:
      summary: 決済APIキックURL
      tags:
        - Seminar
      responses:
        '301':
          description: 'アプリにリダイレクト("finalcial-colleage://card?")'
          content:
            application/json:
              schema:
                type: object
                properties:
                  Result:
                    type: string
                    description: 決済結果
                  itemId:
                    type: string
                    description: 商品ID
                required:
                  - Result
                  - itemId
      operationId: getResultPayment
      description: 決済APIのキックURL
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Result:
                  type: string
                  description: 決済結果
                  example: '"OK":決済成功, "NG":決済失敗'
                  minLength: 2
                  maxLength: 2
                itemId:
                  type: string
                  maxLength: 100
                  description: 商品ID
              required:
                - Result
                - itemId
        description: ''

  /contact:
    get:
      summary: お問い合わせ
      tags:
        - Contact
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  inquiry_email:
                    type: string
                    description: お問い合わせ先メールアドレス
                  category_list:
                    type: array
                    description: カテゴリーリスト
                    items:
                      $ref: '#/components/schemas/faq_category'
                  status:
                    type: string
                required:
                  - inquiry_email
                  - category_list
                  - status
              examples:
                example:
                  value:
                    inquiry_email: inquiry@example.com
                    category_list:
                      - 講義予約
                      - 講義のキャンセル
                      - イベント予約
                    status: success
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  error:
                    type: string
                required:
                  - status
                  - error
      operationId: getContact
      description: お問い合わせ情報取得API
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: 'Bearer {$token}'
          required: true

components:
  schemas:
    Client-loggedin:
      title: 顧客情報
      type: object
      description: ログインした顧客情報モデル
      properties:
        id:
          type: integer
          description: 顧客ID
        login_id:
          type: string
          description: ログインID
        password:
          type: string
          description: 暗号化されたパスワード
        email:
          type: string
          description: メールアドレス
        full_name:
          type: string
          description: 名前
      required:
        - id
        - login_id
        - password
        - email
        - full_name
      x-examples:
        example:
          value:
            id: 1
            login_id: user
            password: $2y$10$DHcchiEiAOvIbwmFunVH2.aYB4IxXbZzFeNcl0f267VuOhfxUI.ju
            email: tyamada@example.com
            full_name: 山田 太郎
    Client-register:
      title: 顧客登録情報
      type: object
      description: 顧客登録情報モデル
      properties:
        login_id:
          type: string
          description: ログインID
          maxLength: 20
        password:
          type: string
          format: password
          maxLength: 20
          description: パスワード
        last_name:
          type: string
          description: 姓
        first_name:
          type: string
          description: 名
        last_name_kana:
          type: string
          description: 姓（かな）
        first_name_kana:
          type: string
          description: 名（かな）
        email:
          type: string
          format: email
          description: メールアドレス
        birth_date:
          type: string
          description: 生年月日
        gender:
          type: integer
          description: 性別
        learned_seminar_type:
          type: integer
          description: セミナーを知ったきっかけ
        introducer:
          type: string
          description: 紹介者
        office_code:
          type: string
          description: 事業所コード
      required:
        - login_id
        - password
        - last_name
        - first_name
        - last_name_kana
        - first_name_kana
        - email
        - birth_date
        - gender
        - learned_seminar_type
        - office_code
      x-examples:
        example-1:
          value:
            login_id: User
            password: Passw0rd
            last_name: 山田
            first_name: 太郎
            last_name_kana: やまだ
            first_name_kana: たろう
            email: tyamada@example.com
            birth_date: '1980-01-20'
            gender: 0
            learned_seminar_type: 0
            office_code: tokyo
        example-2:
          value:
            login_id: User
            password: Passw0rd
            last_name: 山田
            first_name: 太郎
            last_name_kana: やまだ
            first_name_kana: たろう
            email: tyamada@example.com
            birth_date: '1980-01-20'
            gender: 2
            learned_seminar_type: 2
            introducer: 佐藤花子
            office_code: tokyo
    client_news:
      title: お知らせ（顧客）
      type: object
      description: お知らせ（顧客）モデル
      x-examples:
        example:
          value:
            id: 1
            published_at: '2019-01-03 03:00'
            subject: お知らせ1
            content: お知らせ1です。
      properties:
        id:
          type: integer
          description: お知らせ（顧客）ID
        published_at:
          type: string
          description: 配信日時
        subject:
          type: string
          description: 件名
        content:
          type: string
          description: お知らせ内容
          maxLength: 1000
      required:
        - id
        - published_at
        - subject
        - content
    staff_news:
      title: お知らせ（スタッフ）
      required:
        - id
        - published_at
        - subject
        - content
      properties:
        id:
          type: integer
          description: お知らせ（スタッフ）ID
        published_at:
          type: string
          description: 配信日時
        subject:
          type: string
          description: 件名
        content:
          type: string
          description: お知らせ内容
          maxLength: 1000
      description: お知らせ（スタッフ）モデル
      x-examples:
        example:
          value:
            id: 2
            published_at: '2019-11-23 13:00'
            subject: スタッフのお知らせ1
            content: スタッフのお知らせ1です。
      type: object
    client_faq:
      title: よくある質問（顧客）
      type: object
      description: よくある質問（顧客）モデル
      x-examples:
        example-1:
          value:
            id: 1
            faq_category: 講義
            question: 講義の予約
            answer: 講義予約画面から予約をします。
        example-2:
          value:
            id: 2
            faq_category: イベント
            question: イベントの予約
            answer: イベント予約画面から予約をします。
      properties:
        id:
          description: よくある質問（顧客）ID
          type: integer
        faq_category:
          type: string
          description: カテゴリー名
        question:
          type: string
          description: 質問
        answer:
          type: string
          description: 回答
      required:
        - id
        - faq_category
        - question
        - answer
    seminar:
      title: 講義・イベント
      type: object
      description: 講義・イベントモデル
      x-examples:
        example-講義:
          value:
            id: 1
            event_date: '2019-11-01'
            start_time: '09:00'
            end_time: '13:00'
            category: 体験
            name: 講義体験会
            amount: 9800
            type: 1
        example-イベント:
          value:
            id: 2
            event_date: '2019-11-10'
            start_time: '12:00'
            end_time: '16:00'
            name: 投資イベント
            amount: 9800
            type: 2
      properties:
        id:
          type: integer
          description: 講義・イベントID
        event_date:
          type: string
          description: 開催日
        start_time:
          type: string
          description: 開始時刻
        end_time:
          type: string
          description: 終了時刻
        category:
          type: string
          description: カテゴリー
        name:
          type: string
          description: 講義・イベント名
        amount:
          type: number
          description: 金額
        type:
          type: integer
          description: 講義・イベント区分
      required:
        - id
        - event_date
        - start_time
        - end_time
        - name
        - type
    faq_category:
      title: お問い合わせカテゴリー
      type: object
      description: お問い合わせカテゴリーモデル
      properties:
        name:
          type: string
          description: カテゴリー名
      required:
        - name
      x-examples:
        example:
          name: 講義予約について
    survey:
      title: 顧客アンケート
      type: object
      description: 顧客アンケートモデル
      properties:
        url:
          type: string
          description: アンケートURL
        name:
          type: string
          description: 講義・イベント名
        event_date:
          type: string
          description: 開催日
        start_time:
          type: string
          description: 開始時刻
        end_time:
          type: string
          description: 終了時刻
        category:
          type: string
          description: 講義カテゴリー
      required:
        - url

